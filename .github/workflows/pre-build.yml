name: Pull Request

on:
  pull_request:
    branches:
      - master

jobs:
  macos:
    name: Pre-build MacOS Package
    runs-on: macos-14
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.7.2'
        modules: qtmultimedia
        cache: true
        cache-key-prefix: ${{ runner.os }}-QtCache-6_7_2
    - name: Setup Additional Dependencies
      run: |
        brew install create-dmg cmake
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '2.6'
        bundler-cache: true
    - name: Build Application
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ../src
        make
        macdeployqt Pilorama.app -qmldir=../src -appstore-compliant
    - name: Fetch Certificate
      env:
        MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      run: |
        bundle exec fastlane ios certificates
    - name: Codesign
      run: |
        codesign \
         --sign "Developer ID Application: SIGONNA LLC (BF7ZL72794)" \
         --timestamp \
         --options runtime \
         --force \
         --deep \
         Pilorama.app
    - name: Notarize Application
      env:
        ICLOUD_USER: ${{ secrets.ICLOUD_USER }}
        ICLOUD_PASSWORD: ${{ secrets.ICLOUD_PASSWORD }}
      run: |
        echo "Zipping application bundle..."
        ditto -c -k --keepParent Pilorama.app Pilorama.zip
        echo "Uploading for notarization..."
        UUID=$( \
          xcrun altool \
           --notarize-app \
           --primary-bundle-id "com.sigonna.opensource.Pilorama" \
           -u "$ICLOUD_USER" -p "$ICLOUD_PASSWORD" \
           --file Pilorama.zip | \
          egrep "RequestUUID" | \
          egrep -o '[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}' \
        )
        echo "Successfully uploaded UUID: $UUID"
        STATUS="In Progress"
        TRIES=1
        echo "Waiting for notarization..."
        while [[ $STATUS != "Package Approved" ]]
        do
          echo "- attempt $TRIES..."
          if [[ $TRIES == 30 ]]
          then
            echo "Notarization FAILED"
            exit 1
          fi
          sleep 30s
          STATUS=$( \
            xcrun altool \
             --notarization-info "$UUID" \
             -u "$ICLOUD_USER" -p "$ICLOUD_PASSWORD" | \
            egrep -o "Package Approved" || : \
          )
          (( TRIES++ ))
          echo "  in progress"
        done
        xcrun stapler staple "Pilorama.app"
    - name: Make Installer
      run: |
        mkdir executable
        mv build/Pilorama.app executable/Pilorama.app
        create-dmg --volname Pilorama --background assets/background.png --window-size 540 320 --icon Pilorama.app 128 128 --app-drop-link 384 128 --no-internet-enable Pilorama.dmg executable/
    - name: Store Package
      uses: actions/upload-artifact@v4
      with:
        name: Pilorama.dmg
        path: Pilorama.dmg
  windows:
    name: Pre-build Windows Package
    runs-on: windows-2022
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.7.2'
        modules: qtmultimedia
        cache: true
        cache-key-prefix: ${{ runner.os }}-QtCache-6_7_2
    - name: Setup Additional Dependencies
      shell: cmd
      run: |
        choco install cmake
    - name: Build Application
      shell: cmd
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ../src
        cmake --build . --config Release
        windeployqt Release\Pilorama.exe -qmldir=../src
    - name: Make Installer
      shell: cmd
      run: |
        iscc wndws.iss
    - name: Store Package
      uses: actions/upload-artifact@v4
      with:
        name: Pilorama_Setup.exe
        path: Pilorama_Setup.exe

  # just to test the build passes on linux
  linux:
    name: Pre-build Linux Package
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.7.2'
        modules: qtmultimedia
        cache: true
        cache-key-prefix: ${{ runner.os }}-QtCache-6_7_2
    - name: Build Application
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ../src
        cmake --build . --config Release