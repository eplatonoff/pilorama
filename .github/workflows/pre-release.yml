name: Pre-Release

on:
  create:
    tags:
      - 'v*.*.*'

jobs:
  macos:
    name: Pre-build MacOS Package
    runs-on: macos-10.15
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1  # not v2!
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.15.2'
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
    - name: Setup Addtional Dependencies
      run: |
        brew install create-dmg
        bundle install
    - name: Set Version
      run: |
        export VERSION=${GITHUB_REF##*v}
        sed -i '' 's/VERSION=[0-9]*\.[0-9]*\.[0-9]*/VERSION='"$VERSION"'/g' src/pilorama.pro
    - name: Build Application
      run: |
        qmake -config release src/pilorama.pro
        make
        macdeployqt Pilorama.app -qmldir=./src
    - name: Fetch Certificate
      env:
        MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      run: |
        bundle exec fastlane ios certificates
    - name: Codesign
      run: |
        codesign \
         --sign "Developer ID Application: SIGONNA LLC (BF7ZL72794)" \
         --timestamp \
         --options runtime \
         --force \
         --deep \
         Pilorama.app
    - name: Notarize Application
      env:
        ICLOUD_USER: ${{ secrets.ICLOUD_USER }}
        ICLOUD_PASSWORD: ${{ secrets.ICLOUD_PASSWORD }}
      run: |
        echo "Zipping application bundle..."
        ditto -c -k --keepParent Pilorama.app Pilorama.zip
        echo "Uploading for notarization..."
        UUID=$( \
          xcrun altool \
           --notarize-app \
           --primary-bundle-id "com.sigonna.opensource.Pilorama" \
           -u "$ICLOUD_USER" -p "$ICLOUD_PASSWORD" \
           --file Pilorama.zip | \
          egrep "RequestUUID" | \
          egrep -o '[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}' \
        )
        echo "Successfully uploaded UUID: $UUID"
        STATUS="In Progress"
        TRIES=1
        echo "Waiting for notarization..."
        while [[ $STATUS != "Package Approved" ]]
        do
          echo "- attempt $TRIES..."
          if [[ $TRIES == 30 ]]
          then
            echo "Notarization FAILED"
            exit 1
          fi
          sleep 30s
          STATUS=$( \
            xcrun altool \
             --notarization-info "$UUID" \
             -u "$ICLOUD_USER" -p "$ICLOUD_PASSWORD" | \
            egrep -o "Package Approved" || : \
          )
          (( TRIES++ ))
          echo "  in progress"
        done
        xcrun stapler staple "Pilorama.app"
    - name: Make Installer
      run: |
        mkdir executable
        mv Pilorama.app executable/Pilorama.app
        create-dmg --volname Pilorama --background assets/background.png --window-size 540 320 --icon Pilorama.app 128 128 --app-drop-link 384 128 --no-internet-enable Pilorama.dmg executable/
    - name: Store Package
      uses: actions/upload-artifact@v2
      with:
        name: Pilorama.dmg
        path: Pilorama.dmg
  windows:
    name: Pre-build Windows Package
    runs-on: windows-2019
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1  # not v2!
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.15.2'
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
    - name: Set Version
      shell: bash
      run: |
        export VERSION=${GITHUB_REF##*v}
        sed -i 's/#define MyAppVersion "[0-9]*\.[0-9]*\.[0-9]"/#define MyAppVersion "'"$VERSION"'"/g' wndws.iss
        sed -i 's/VERSION=[0-9]*\.[0-9]*\.[0-9]*/VERSION='"$VERSION"'/g' src/pilorama.pro
    - name: Build Application
      shell: cmd
      run: |
        call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        qmake -config release src\pilorama.pro
        nmake
        windeployqt release/Pilorama.exe -qmldir=./src
    - name: Make Installer
      shell: cmd
      run: |
        iscc wndws.iss
    - name: Store Package
      uses: actions/upload-artifact@v2
      with:
        name: Pilorama_Setup.exe
        path: Pilorama_Setup.exe
  push_back:
    name: Send published version to HEAD
    runs-on: ubuntu-20.04
    needs: [macos, windows]
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        persist-credentials: false
        fetch-depth: 0
    - name: Set Version
      run: |
        export VERSION=${GITHUB_REF##*v}
        sed -i 's/#define MyAppVersion "[0-9]*\.[0-9]*\.[0-9]*"/#define MyAppVersion "'"$VERSION"'"/g' wndws.iss
        sed -i 's/VERSION=[0-9]*\.[0-9]*\.[0-9]*/VERSION='"$VERSION"'/g' src/pilorama.pro
    - name: Commit Version
      run: |
        export VERSION=${GITHUB_REF##*v}
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "Release version $VERSION" -a
    - name: Push Changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
