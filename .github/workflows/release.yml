name: Release Builds

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  release:
    types:
      - published
      - prereleased

jobs:
  macos:
    name: Build MacOS Release Package
    runs-on: macos-14
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up ccache
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: macos-ccache-${{ github.sha }}
        restore-keys: macos-ccache-

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: "6.9.0"
        modules: qtmultimedia
        cache: true
        cache-key-prefix: ${{ runner.os }}-QtCache-6_9_0

    - name: Cache Homebrew
      uses: actions/cache@v4
      with:
        path: /Users/runner/Library/Caches/Homebrew
        key: brew-${{ hashFiles('.github/workflows/release.yml') }}

    - name: Setup Additional Dependencies
      run: |
        brew install create-dmg ninja

    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.cargo/bin
        key: ${{ runner.os }}-cargo-rcodesign-0.27.0

    - name: Install rcodesign from git
      uses: baptiste0928/cargo-install@v3
      with:
        crate: apple-codesign
        git: https://github.com/indygreg/apple-platform-rs
        tag: apple-codesign/0.27.0
        args: --bin rcodesign
        locked: false # due to compile error

    - name: Cache build directory
      uses: actions/cache@v4
      with:
        path: build
        key: macos-build-${{ github.sha }}
        restore-keys: macos-build-

    - run: ccache -z

    - name: Build Application
      run: |
        mkdir -p build && cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_C_COMPILER_LAUNCHER=ccache \
              -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ../src
        ninja

    - run: ccache -s

    - name: Create a deployable application bundle
      run: |
        cd build
        macdeployqt Pilorama.app -qmldir=../src -appstore-compliant
        find Pilorama.app -name "*.dSYM" -exec rm -rf {} +

    - name: Write P12 cert to a file
      run: |
        echo '${{ secrets.APPLE_CERT_BASE64 }}' | base64 --decode > cert.p12

    - name: Write App Store Connect API Key to file
      run: |
        echo '${{ secrets.APP_STORE_CONNECT_API_KEY_JSON }}' > appstoreconnect.json

    - name: Sign
      env:
        APPLE_CERT_PASSWORD: ${{ secrets.APPLE_CERT_PASSWORD }}
      run: |
        rcodesign sign --p12-file cert.p12 --p12-password $APPLE_CERT_PASSWORD --for-notarization --exclude '*dSYM*' build/Pilorama.app

    - name: Notarize
      run: |
        rcodesign notary-submit --staple --api-key-file appstoreconnect.json build/Pilorama.app

    - name: Make Apple Disk Image
      run: |
        mkdir executable
        mv build/Pilorama.app executable/Pilorama.app
        create-dmg --volname Pilorama --background assets/background.png --window-size 540 320 --icon Pilorama.app 128 128 --app-drop-link 384 128 --no-internet-enable Pilorama.dmg executable/

    - name: Store Package
      uses: actions/upload-artifact@v4
      with:
        name: Pilorama.dmg
        path: Pilorama.dmg

  windows:
    name: Build Windows Release Package (unsigned)
    runs-on: windows-2022
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up sccache
      uses: mozilla-actions/sccache-action@v0.0.3
      with:
        save-cache: true

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.9.0'
        modules: qtmultimedia
        cache: true
        cache-key-prefix: ${{ runner.os }}-QtCache-6_9_0

    - name: Cache Chocolatey packages
      uses: actions/cache@v4
      with:
        path: C:\ProgramData\chocolatey\lib
        key: choco-${{ hashFiles('.github/workflows/release.yml') }}

    - name: Setup Additional Dependencies
      shell: cmd
      run: |
        choco install cmake ninja

    - name: Cache build directory
      uses: actions/cache@v4
      with:
        path: build
        key: windows-build-${{ github.sha }}
        restore-keys: windows-build-

    - shell: cmd
      run: sccache --zero-stats

    - name: Build Application
      shell: cmd
      run: |
        mkdir build
        cd build
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ^
              -DCMAKE_C_COMPILER_LAUNCHER=sccache ^
              -DCMAKE_CXX_COMPILER_LAUNCHER=sccache ../src
        ninja -j %NUMBER_OF_PROCESSORS%
        windeployqt Release\Pilorama.exe -qmldir=../src

    - shell: cmd
      run: sccache --show-stats

    - name: Make Installer
      shell: cmd
      run: |
        iscc wndws.iss

    - name: Store Package
      uses: actions/upload-artifact@v4
      with:
        name: Pilorama_Setup.exe
        path: Pilorama_Setup.exe

  upload-release:
    name: Attach Packages to Release
    needs: [macos, windows]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    permissions:
      contents: write
    steps:
    - name: Download macOS package
      uses: actions/download-artifact@v4
      with:
        name: Pilorama.dmg
        path: .
        merge-multiple: true
    - name: Download Windows package
      uses: actions/download-artifact@v4
      with:
        name: Pilorama_Setup.exe
        path: .
        merge-multiple: true
    - name: Upload Release Assets
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.release.tag_name }}
        files: |
          Pilorama.dmg
          Pilorama_Setup.exe
